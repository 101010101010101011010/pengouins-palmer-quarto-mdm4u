---
title: Comprendre les pingouins Palmer
subtitle: Une analyse statistique de la physiologie pingouinale
format:
  pdf:
    include-in-header:
      - text: |
          \usepackage{xcolor}
      - macros.tex
toc: true
highlight-style: github
authors:
  - name: Nicolas Kmita
    affiliation: École secondaire Franco-Cité
bibliography:
  - references.bib
  - packages.bib
nocite: |
  @*
notebook-links: false
---

```{r}
# Préparation de librairies et installations variés

cran_mirror <- "https://mirror.csclub.uwaterloo.ca/CRAN/"

pkgs <- c(
  "palmerpenguins",
  "tidyverse",
  "languageserver",
  "ggbeeswarm", # Génère des graphique d'essaim d'abeille
  "viridis", # Couleurs pouvant être mieux perçus
  "kableExtra",
  "rmarkdown",
  "knitr", # Tableaux
  "tinytex"
)

# Charger les « packages » et, s'ils ne sont pas installés, les installer du mirroir de CRAN indiqué ci-haut (UWaterloo par défaut).
for(pkg in pkgs) {
  # Voir https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them

  if(require(pkg, character.only=TRUE)){
    next
  }

  install.packages(pkg, repos=cran_mirror)
  library(pkg, character.only=TRUE)
}

# Assurer la présence de TinyTeX
if (nchar(tinytex_root()) <= 0) {
  install_tinytex()
}

# Génération de citations
knitr::write_bib(pkgs, prefix="", file="packages.bib", tweak=FALSE)
```

```{r}
# Assurer l'utilisation des virgules par les sorties

inline_hook_old <- knit_hooks$get("inline")

format_d <- function(x) {
  if (is.numeric(x)) {
    return(str_replace_all(str_replace_all(sprintf("%.2f", x), "[.]", ","), ",00", ""))
  }

  return(x)
}

kable_fr <- function(x) {
  # Alignement selon la type de valeur
  alignment <- ""
  for(i in 1:ncol(x)) {
    if (is.numeric(x[,i])) {
      alignment <- paste(alignment, "r", sep="")
    } else {
      alignment <- paste(alignment, "l", sep="")
    }
  }

  x %>%
    mutate_all(~format_d(.)) %>%
    kable(align=alignment, "pipe")
}

decimal_hook <- function (x) {
  if (is.numeric(x)) {
    # If integer, print without decimal; otherwise print two places
    res <- ifelse(x == round(x),
      sprintf("%d", x),
      str_replace_all(sprintf("%.2f", x), "[.]", ",")
    )
    paste(res, collapse = ", ")
  }

  inline_hook_old(x)
}

knit_hooks$set(inline = decimal_hook)
```

```{r}
# Préparation aesthétique

theme_set(theme_classic())

# Échelle de couleur des pingouins Palmer
penguin_colours <- c("darkorange","purple","cyan4")
names(penguin_colours) <- levels(penguins$species)
penguin_colour_scale <- function(fill = FALSE) {
  if (fill) {
    return (scale_fill_manual(name = "Espèce", values = penguin_colours))
  }

  return (scale_colour_manual(name = "Espèce", values = penguin_colours))
}

# Utilisation d'une graine aléatoire déterminée
set.seed(3142)

```

```{r}
# Fonctions générales

# Mode pour les facteurs
Mode <- function(x) {
  ux <- unique(x)
  return(ux[which.max(tabulate(match(x, ux)))])
}
```

```{r}
penguins_fr <-
  penguins %>%
  mutate(
    body_mass_g = body_mass_g / 1000,
    sex = ifelse(sex == "male", "Mâle", ifelse(sex == "female", "Femelle", sex))
  )

colnames(penguins_fr) <- c("Espèce", "Isle", "Longueur du bec (mm)", "Profondeur du bec (mm)", "Longueure de la nageoire (mm)", "Masse corporelle (kg)", "Sexe", "Année")
```

MDM4U-01

M. Chabot

10 octobre 2024

{{< pagebreak >}}

## X- Variables

Il y a 8 variables dont les données ont été récoltés par la station Palmer:

### Espèce --- `species`

Une variable catégorique nominale dénotant le nom de l'espèce du pingouin mesuré, soit \adelie{}, \chinstrap{} ou \gentoo{}.

### Isle --- `island`

Une variable catégorique nominale dénotant l'isle dans l'archipel Palmer sur laquelle vit le pingouin mesuré, soit `Biscoe`, `Dream` ou `Torgersen`.

### Longueur du bec (mm) --- `bill_length_mm`

Une variable numérique continue dénotant la longueur du bec du pingouin mesuré, en millimètres.

### Profondeur du bec (mm) --- `bill_depth_mm`

Une variable numérique continue dénotant la profondeur du bec du pingouin mesuré, en millimètres.

### Longueure de la nageoire (mm) --- `flipper_length_mm`

Une variable numérique continue, arrondie à l'unité près, dénotant la longueur de la nageoire du pingouin mesuré, en millimètres.

### Masse corporelle (g) --- `body_mass_g`

Une variable numérique continue, arrondie à l'unité près, dénotant la masse corporelle du pingouin mesuré, en grammes.

### Sexe --- `sex`

Une variable catégorique nominale dénotant le sexe du pingouin mesuré, soit `femelle` ou `mâle`.

### Année --- `year`

Une variable numérique *discrète, donnée à l'unité près, indiquant l'année de la prise de mesure du pingouin.

## Analyse

::: {.callout-note}
Les valeurs manquantes ne sont enlevés que lorsqu'elles interfèrent directement avec les calculs. Par exemple, la moyenne de 1 + NA n'est pas une valeur valide. Ainsi, dans un graphique contenant deux variables, les entrées ayant des valeurs manquantes dans au moins une *des deux variables* seront exlus.
:::

### X- Est-ce qu'il y a des valeurs manquantes?

En plaçant chaque pingouin manquant une ou plusieurs mesures dans un même tableau, comme dans le [Tableau @tbl-nalist], plusieurs patrons se mettent en évidence.

```{r}
#| label: tbl-nalist
#| exho: FALSE
#| tbl-cap: 'Tous les pingouins, en rangées, ayant au moins une valeur manquante.'
#| out-width: '100%'
#| tbl-align: 'center'

penguins %>%
  filter(
    is.na(species) |
    is.na(island) |
    is.na(bill_length_mm) |
    is.na(bill_depth_mm) |
    is.na(flipper_length_mm) |
    is.na(body_mass_g) |
    is.na(sex) |
    is.na(year)
  ) %>%
  `colnames<-`(gsub(" ", " ", colnames(penguins_fr))) %>%
  kable_fr() %>%
  column_spec(3:6, width = "4.5em")

```

D'abords, aucune des variables de l'espèce, l'île ou l'année ne manque d'entrée. Ceci est probablement, mais pas certainement, en raison de la méthode d'échentillonnage situant les chercheurs déjà sur l'île et où de la connaissance naturelle de la date courante lors de la requête. Ce seraient donc des métadonnées sans récolte necéssaire sur-place, plutôt prévisionnaire (à part l'espèce, qui peut être distinguée visuellement).

Ensuite, lorsqu'une des mesures quantitatives continues (non incluant l'année) est absente, elles les sont toutes. Dans une situation de récolte de données, il se pourrait peut-être qu'un chercheur voie un pingouin mais ne puisse pas l'atteindre, ce le prévenant d'accomplir une mesure. Le manque de sexe lors de ces cas appuie cette supposition puisque le sexe des pingouins ne peut également pas être mesurée de distance.

Prenant suite, il y a plusieurs pingouins sans sexe assigné. Plusieurs raisons pourraient expliquer ceci: un sexe indéfini ou imprécie, un pingouin échappé (tel que décrit plus haut), ou une raison situationnelle imprévisible. En tout cas, comme évident dans les [Tableaux @tbl-som-qualquant] et [-@tbl-nalist], la majorité des valeurs manquantes sont compris dans la variable du sexe, soit `{r} sum(is.na(penguins$sex)) / sum(is.na(penguins))` de tous les valeurs manquantes. Également, tous les pingouins manquant des données ont notamment un sexe manquant, indiquant que le sexe pourrait être la variable la plus difficile à mesurer ou classifier pour les pingouins Palmer.

Il est également à noter que chaque année d'échantillonage comprend au minimum une valeur manquante et que la première année en comprend le plus. Plusieurs renseignements au sujet de la situation des chercheurs — tels que la présence d'une erreure systématique provoquant des données invalides (NA) ou un manque de préparation lors de la première année — pourraient être déduits, toutefois cela me paraîtrait une extrapolation étant donné le peu d'étendu de temps et le peu de contexte.

### Est-ce qu'il y a des valeurs aberrantes?

::: {.callout-note}
Les valeurs aberrantes sont traités selon l'espèce.
:::

::: {.callout-tip}
Une valeur aberrante est défini en tant qu'une valeur non contenue entre Q1 - 1,5(IIQ) et Q3 + 1,5(IIQ).
:::

<!-- #| label: tbl-sd
#| exho: FALSE
#| tbl-cap: 'Les écarts types'
#| out-width: '100%'
#| tbl-align: 'center'
#| layout-ncol: 2
#| tbl-subcap:
#|    - "Longueur du bec (mm)"
#|    - "Profondeur du bec (mm)"
#|    - "Longueure de la nageoire (mm)"
#|    - "Masse corporelle (kg)" -->
::: {#tbl-aberrvars layout-ncol=2}

```{r}
#| tbl-cap: "Les bords de ce qui n'est pas une longueur du bec (mm) aberrante"

penguins %>%
  group_by(species) %>%
  select(bill_length_mm) %>%
  summarise_all(
    list(
      sd = ~sd(., na.rm=TRUE),
      q1 = ~quantile(., 0.25, na.rm=TRUE),
      min_ab = ~(quantile(., 0.25, na.rm=TRUE) - 1.5*sd(., na.rm=TRUE)),
      max_ab = ~(quantile(., 0.25, na.rm=TRUE) + 1.5*sd(., na.rm=TRUE))
    )
  ) %>%
  `colnames<-`(c("Espèce", "Écart type", "Q1", "Min. aberrante", "Max. aberrante")) %>%
  kable_fr() %>%
  column_spec(2:5, width = "2.1em")

```

``` {r}
#| tbl-cap: "Profondeur du bec (mm)"

penguins %>%
  group_by(species) %>%
  select(bill_depth_mm) %>%
  summarise_all(
    list(
      sd = ~sd(., na.rm=TRUE),
      q1 = ~quantile(., 0.25, na.rm=TRUE),
      min_ab = ~(quantile(., 0.25, na.rm=TRUE) - 1.5*sd(., na.rm=TRUE)),
      max_ab = ~(quantile(., 0.25, na.rm=TRUE) + 1.5*sd(., na.rm=TRUE))
    )
  ) %>%
  `colnames<-`(c("Espèce", "Écart type", "Q1", "Min. aberrante", "Max. aberrante")) %>%
  kable_fr() %>%
  column_spec(2:5, width = "2.1em")

```

``` {r}
#| tbl-cap: "Longueure de la nageoire (mm)"

penguins %>%
  group_by(species) %>%
  select(flipper_length_mm) %>%
  summarise_all(
    list(
      sd = ~sd(., na.rm=TRUE),
      q1 = ~quantile(., 0.25, na.rm=TRUE),
      min_ab = ~(quantile(., 0.25, na.rm=TRUE) - 1.5*sd(., na.rm=TRUE)),
      max_ab = ~(quantile(., 0.25, na.rm=TRUE) + 1.5*sd(., na.rm=TRUE))
    )
  ) %>%
  `colnames<-`(c("Espèce", "Écart type", "Q1", "Min. aberrante", "Max. aberrante")) %>%
  kable_fr() %>%
  column_spec(2:5, width = "2.1em")

```

```{r}
#| tbl-cap: "Masse corporelle (kg)"

penguins %>%
  mutate(
    body_mass_g = body_mass_g / 1000,
  ) %>%
  group_by(species) %>%
  select(body_mass_g) %>%
  summarise_all(
    list(
      sd = ~sd(., na.rm=TRUE),
      q1 = ~quantile(., 0.25, na.rm=TRUE),
      min_ab = ~(quantile(., 0.25, na.rm=TRUE) - 1.5*sd(., na.rm=TRUE)),
      max_ab = ~(quantile(., 0.25, na.rm=TRUE) + 1.5*sd(., na.rm=TRUE))
    )
  ) %>%
  `colnames<-`(c("Espèce", "Écart type", "Q1", "Min. aberrante", "Max. aberrante")) %>%
  kable_fr() %>%
  column_spec(2:5, width = "2.1em")

```

:::

```{r}
#| label: tbl-aberrantes
#| exho: FALSE
#| tbl-cap: 'Les valeurs aberrantes'
#| out-width: '100%'
#| tbl-align: 'center'

penguins %>%
  # group_by(species) %>%
  filter(
    if_any(
      c(bill_length_mm),#, bill_depth_mm, flipper_length_mm, body_mass_g),
      ~ (. < (quantile(., 0.25, na.rm=TRUE) - sd(., na.rm=TRUE)))
    )
  ) %>%
  # summarise_all(
  #   list(
  #     q1 = quantile(., 0.25, na.rm=TRUE)
  #   )
  # ) %>%
  kable() %>%
  column_spec(3, color="white", background = "black")

# penguins %>%
#   group_by(species) %>%
#   filter(
#     bill_length_mm < quantile(bill_length_mm, 0.1, na.rm=TRUE)
#     # bill_depth_mm |
#     # flipper_length_mm |
#     # body_mass_g |
#   ) %>%
#   `colnames<-`(gsub(" ", " ", colnames(penguins_fr))) %>%
#   kable_fr() %>%
#   column_spec(3:6, width = "4.5em")

```

### Sommaire statistiques?

```{r}
#| label: tbl-som-qualquant
#| exho: FALSE
#| tbl-cap: 'Le sommaire partiel des variables qualitatives et \textit{quantitatives}.'
#| out-width: '100%'
#| tbl-align: 'center'

factor_list <-
  penguins_fr %>%
  # select_if(negate(is.numeric)) %>%
  summarise_all(
    list(
      n=~n(),
      na=~sum(is.na(.)),
      mode=~as.character(Mode(.))
    )
  ) %>%
  unlist() %>%
  split(seq(ncol(
    penguins_fr
    # select_if(negate(is.numeric))
  )))

factor_df <- data.frame(
  matrix(unlist(factor_list), nrow=ncol(penguins_fr), byrow=TRUE),
  row.names = colnames(
    penguins_fr
    # select_if(negate(is.numeric))
  )
)

colnames(factor_df) <- c("n", "NA", "Mode")

factor_df %>%
  kable()

```

```{r}
#| label: tab-som-quant
#| exho: FALSE
#| tbl-cap: 'Le sommaire des variables quantitatives.'
#| out-width: '100%'
#| tbl-align: 'center'

# rownames(sommaire) <- colnames(penguins)

numeric_list <-
  penguins_fr %>%
  select_if(is.numeric) %>%
  summarise_all(
    list(
      moyenne=~mean(., na.rm = TRUE),
      min=~min(., na.rm = TRUE),
      q1=~quantile(., 0.25, na.rm = TRUE),
      q2=~median(., na.rm = TRUE),
      q3=~quantile(., 0.75, na.rm = TRUE),
      max=~max(., na.rm = TRUE),
      ecart=~max(., na.rm = TRUE) - min(., na.rm = TRUE)
    )
  ) %>%
  unlist() %>%
  split(seq(ncol(
    penguins_fr %>%
    select_if(is.numeric)
  )))

numeric_df <- data.frame(
  matrix(unlist(numeric_list), nrow=5, byrow=TRUE),
  row.names = colnames(
    penguins_fr %>%
    select_if(is.numeric)
  )
)

colnames(numeric_df) <- c("Moyenne", "Min", "Q1", "Médiane", "Q3", "Max", "Écart")

numeric_df %>%
  kable_fr()

```

### Min, moyenne, médiane, mode, max, quartiles, écart type.

```{r fig-violin-beclon, exho=FALSE, fig.cap='Longueurs de becs des pingouins Palmer, selon l\'espèce. Les barres rouges indiquent l\'allonge de l\'écart type, les lignes noires horizontales de chaque violon indiquent les quartiles, et les points rouges sont les moyennes.', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  filter(
    !is.na(bill_length_mm)
  )

dfTab <- sifted %>% group_by(species) %>%
  summarize(
    y = max(bill_length_mm) + 1,
    mean = mean(bill_length_mm),
    sd = round(sd(bill_length_mm), digits = 2)
  )

ggplot(sifted) +
  # Diagrammes
  geom_violin(aes(species, bill_length_mm), staplewidth = 0.5, draw_quantiles = c(0.25, 0.5, 0.75)) +
  geom_quasirandom(aes(species, bill_length_mm, colour = sex), width = 0.3, alpha = 0.2) +

  # Écart type / barres d'érreure
  geom_errorbar(data=dfTab, aes(x=species, y=mean, ymin=mean-sd, ymax=mean+sd), width=.2, linewidth=.3, colour="red") +
  geom_point(data=dfTab, aes(x=species, y=mean), size=0.5, colour="red") +
  # Anotation de l'écart type
  geom_text(data=dfTab,aes(x=species,y=y,parse=FALSE,label=sprintf("s = %.2f", dfTab$sd)),vjust=0) +

  # Thèmes
  theme(
    legend.position = c(0.10, 0.80),
    legend.background = element_rect(colour = "black")
  ) +
  theme(
    panel.grid.major.y = element_line(color = "#00000011"),
    panel.grid.minor.y = element_line(color = "#0000000f"),
  ) +

  # Anotations
  scale_colour_discrete(labels = c("Femelle", "Mâle", "N/A")) +
  labs(
    title = "Longueurs de becs par rapport à l'espèce",
    x = "Espèce",
    y = "Longueur du bec (mm)",
    colour = "Sexe"
  )
```

```{r fig-violin-becprof, exho=FALSE, fig.cap='Profondeurs de becs des pingouins Palmer, selon l\'espèce. Les barres rouges indiquent l\'allonge de l\'écart type, les lignes noires horizontales de chaque violon indiquent les quartiles, et les points rouges sont les moyennes.', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  filter(
    !is.na(bill_depth_mm)
  )

dfTab <- sifted %>% group_by(species) %>%
  summarize(
    y = max(bill_depth_mm) + 0.2,
    mean = mean(bill_depth_mm),
    sd = round(sd(bill_depth_mm), digits = 2)
  )

ggplot(sifted) +
  # Diagrammes
  geom_violin(aes(species, bill_depth_mm), staplewidth = 0.5, draw_quantiles = c(0.25, 0.5, 0.75)) +
  geom_quasirandom(aes(species, bill_depth_mm, colour = sex), width = 0.3, alpha = 0.2) +
  
  # Écart type / barres d'érreure
  geom_errorbar(data=dfTab, aes(x=species, y=mean, ymin=mean-sd, ymax=mean+sd), width=.2, linewidth=.3, colour="red") +
  geom_point(data=dfTab, aes(x=species, y=mean), size=0.5, colour="red") +
  # Anotation de l'écart type
  geom_text(data=dfTab,aes(x=species,y=y,parse=FALSE,label=sprintf("s = %.2f", dfTab$sd)),vjust=0) +

  # Thèmes
  theme(
    legend.position = c(0.90, 0.80),
    legend.background = element_rect(colour = "black")
  ) +
  theme(
    panel.grid.major.y = element_line(color = "#00000011"),
    panel.grid.minor.y = element_line(color = "#0000000f"),
  ) +

  # Anotations
  scale_colour_discrete(labels = c("Femelle", "Mâle", "N/A")) +
  labs(
    title = "Profondeurs de becs par rapport à l'espèce",
    x = "Espèce",
    y = "Profondeur du bec (mm)",
    colour = "Sexe"
  )
```

```{r fig-violin-nagelon, exho=FALSE, fig.cap='Longueurs de nageoires des pingouins Palmer, selon l\'espèce. Les barres rouges indiquent l\'allonge de l\'écart type, les lignes noires horizontales de chaque violon indiquent les quartiles, et les points rouges sont les moyennes.', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  filter(
    !is.na(flipper_length_mm)
  )

dfTab <-
  sifted %>%
  group_by(
    species
  ) %>%
  summarize(
    y = max(flipper_length_mm) + 2,
    mean = mean(flipper_length_mm),
    sd = round(sd(flipper_length_mm), digits = 2)
  )

ggplot(sifted) +
  # Diagrammes
  geom_violin(aes(species, flipper_length_mm), staplewidth = 0.5, draw_quantiles = c(0.25, 0.5, 0.75)) +
  geom_quasirandom(aes(species, flipper_length_mm, colour = sex), width = 0.3, alpha = 0.2) +
  
  # Écart type / barres d'érreure
  geom_errorbar(data=dfTab, aes(x=species, y=mean, ymin=mean-sd, ymax=mean+sd), width=.2, linewidth=.3, colour="red") +
  geom_point(data=dfTab, aes(x=species, y=mean), size=0.5, colour="red") +
  # Anotation de l'écart type
  geom_text(data=dfTab,aes(x=species,y=y,parse=FALSE,label=sprintf("s = %.2f", dfTab$sd)),vjust=0) +

  # Thèmes
  theme(
    legend.position = c(0.90, 0.25),
    legend.background = element_rect(colour = "black")
  ) +
  theme(
    panel.grid.major.y = element_line(color = "#00000011"),
    panel.grid.minor.y = element_line(color = "#0000000f"),
  ) +

  # Anotations
  scale_colour_discrete(labels = c("Femelle", "Mâle", "N/A")) +
  labs(
    title = "Longueurs de nageoires par rapport à l'espèce",
    x = "Espèce",
    y = "Longueure de la nageoire (mm)",
    colour = "Sexe"
  )
```

### X- Quelle île héberge le plus de pingouins, et quel et la relation entre les espèces et l'île?

L'île hébergeant le plus de pinguoins peut être estimée en manière d'un histogramme de fréquence, comme dans la @fig-freq-isle.

```{r fig-freq-isle, echo=FALSE, fig.cap='La fréquence des pingouins Palmer par île, selon les espèces, comparés entre-eux', out.width='100%', fig.align='center'}

sifted <-
 penguins

ggplot(sifted, aes(island)) +
  geom_histogram(stat="count", aes(fill = species), color = "black") +
  
  # Intervales
  scale_y_continuous(
    limits = c(0, 180),
    expand = c(0, 0),
    breaks = seq(from = 0, to = 180, by = 60),
    minor_breaks = seq(from = 0, to = 180, by = 10)
  ) +

  # Thèmes
  theme(
    panel.grid.major.y = element_line(color = "grey"),
    panel.grid.minor.y = element_line(color = "grey90"),
  ) +
  penguin_colour_scale(TRUE) +
  theme(
    legend.position = c(0.85, 0.75),
    legend.background = element_rect(fill = "#ffffffee")
  ) +

  # Renomer tout
  labs(
    title = "Fréquence des îles de pingouins Palmer",
    x = "Île",
    y = "Fréquence",
    fill = "Espèce"
  )
```

```{r}
# Différences entre les fréquences de chaque île, à utiliser en-texte
bis_drea_isle_diff <- sum(penguins$island == "Biscoe") - sum(penguins$island == "Dream")
drea_torg_isle_diff <- sum(penguins$island == "Dream") - sum(penguins$island == "Torgersen")
```

L'île Biscoe comporte `{r} bis_drea_isle_diff` pingouins de plus que l'île Dream, qui en comporte `{r} drea_torg_isle_diff` de plus que l'île Torgersen. L'île Biscoe a donc une bonne avance sur les autres en terme de population de pingouins, toutefois ce pourrait aussi être que les autres îles n'ont pas eus autant de couvrage par l'équipe d'échantillonnage.

La @fig-freq-isle suggère également que les \adelie{}s sont la seule des trois espèces à se situer sur plus d'une des îles mesurées. Il se pourrait plusieurs raisons pour ceci, par exemple une préférence nomade, mais sans des recherches plus approfondies c'est entièrement incertain. Il est à noter qu'à l'exception de l'île Torgersen, les \adelie{}s forment la minoritée et ne sont donc l'espèce pinguinale primaire que sur une des trois îles.

### Quelles sont les relations entre le sexe, l'espèce et l'île?

### X- Quelle est la relation entre le sexe et la masse, et l'espèce et la masse?

```{r}
# Moyennes des masses de chaque espèce, à utiliser en-texte

sifted <-
  penguins %>%
  mutate(
    body_mass_g = body_mass_g / 1000
  ) %>%
  filter(
    !is.na(body_mass_g) &
    !is.na(sex)
  )

penguin_mass_avgs <-
  sifted %>%
  group_by(
    species
  ) %>%
  summarize(
    mean = mean(body_mass_g)
  ) %>%
  select(
    species,
    mean
  )
```

En omettant les valeurs lorsque le sexe ou le poids sont manquantes, il est d'abord évident, dans la @fig-violin-masscats, que les mâles sont, en moyenne, plus pesants que les femelles. Ceci est le cas pour les trois espèces analysés.

```{r fig-violin-masscats, exho=FALSE, fig.cap='Les masses corporelles, en kilogrammes, par rapport à l\'espèce et le sexe des pingouins Palmer', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  mutate(
    body_mass_g = body_mass_g / 1000
  ) %>%
  filter(
    !is.na(body_mass_g) &
    !is.na(sex)
  )

dfTab <-
  sifted %>%
  group_by(
    species,
    sex
  ) %>%
  summarize(
    y = max(body_mass_g) + 0.1,
    mean = mean(body_mass_g),
    sd = round(sd(body_mass_g), digits = 2)
  )

dodgewidth <- 0.9

ggplot(sifted) +
  # Diagrammes
  geom_violin(aes(x=species, y=body_mass_g, color=sex), position=position_dodge(width=dodgewidth), staplewidth = 0.5, draw_quantiles = c(0.25, 0.5, 0.75)) +
  geom_quasirandom(aes(x=species, y=body_mass_g, colour=sex), dodge.width=dodgewidth, width = 0.12, alpha = 0.2) +

  # Écart type / barres d'érreure
  geom_errorbar(data=dfTab, aes(x=species, group=sex, y=mean, ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=dodgewidth), width=.205, linewidth=.4, colour="black") +
  geom_point(data=dfTab, aes(x=species, group=sex, y=mean), position=position_dodge(width=dodgewidth), size=0.6, colour="black") +

  geom_errorbar(data=dfTab, aes(x=species, group=sex, y=mean, ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=dodgewidth), width=.2, linewidth=.3, colour="red") +
  geom_point(data=dfTab, aes(x=species, group=sex, y=mean), position=position_dodge(width=dodgewidth), size=0.5, colour="red") +

  # Anotation de l'écart type
  geom_text(data=dfTab,aes(x=species, group=sex, y=y, parse=FALSE, label=sprintf("s = %.2f", dfTab$sd)), position=position_dodge(width=dodgewidth), vjust=0) +

  # Thèmes
  theme(legend.position = c(0.15, 0.85)) +

  # Anotations
  scale_colour_discrete(labels = c("Femelle", "Mâle")) +
  labs(
    title = "Masses corporelles (kg) par rapport à l'espèce et le sexe",
    x = "Espèce",
    y = "Masse corporelle (kg)",
    colour = "Sexe"
  )
```

Les \adelie{}s et \chinstrap{}s sont ensuite similaires en terme de masse. Les \gentoo{}s, quants à eux, pèsent considérablement plus à `{r} round(penguin_mass_avgs[penguin_mass_avgs$species == "Gentoo",]$mean / penguin_mass_avgs[penguin_mass_avgs$species == "Adelie",]$mean, 2)` fois la masse des \adelie{}s et `{r} round(penguin_mass_avgs[penguin_mass_avgs$species == "Gentoo",]$mean / penguin_mass_avgs[penguin_mass_avgs$species == "Chinstrap",]$mean, 2)` fois la masse des \chinstrap{}s. Les \gentoo{}s sont donc, en moyenne, les pingouins les plus pesants de Palmer^[Supposant que les espèces \adelie{}, \chinstrap{} et \gentoo{} sont les seules espèces de l'archipel Palmer.]

Il se trouve également que les écarts types des mâles sont tous plus hautes que ceux des femelles; les mâles se trouvent dans les basses à moyennes trentaines tandis que les femelles se trouvent dans les hautes vingtaines. Il y a ainsi une plus grande variation de masse pour les mâles de chaque espèce. Notez, toutefois, que cette tendence pourrait être le résultat d'un échantillon de taille minime. Les divisions ayant peu d'échantillonnés contiennent des points seuls aux extrémités (pas necéssairement des points aberrants) de manière similaire aux points normaux de divisions ayant des échantillons plus complets. Sur cette idée, les divisions ayant le plus grand écart type de leur sexe proviennent des \chinstrap{}s, qui ont le moins de pingouins échantillonnés. Il se pourrait donc que le sexe soit corrélé à une plus grande variation de masse, mais les variations de tailles d'échantillon de chaque division me prévient de faire une telle assumption.

### Quelle est la relation entre les dimensions du bec?

En comparant

```{r fig-dots-longbecnage, echo=FALSE, fig.cap='La longueure de la nageoire pour la profondeur du bec, la longuer du bec et l\'espèce', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  mutate(
    flipper_length_mm = flipper_length_mm / 10
  ) %>%
  filter(
    !is.na(bill_length_mm) &
    !is.na(flipper_length_mm)
  )

dfTab <-
  sifted %>%
  group_by(
    species
  ) %>%
  summarize(
    x = min((penguins %>% filter(!is.na(bill_length_mm)))$bill_length_mm) + ifelse(species == "Adelie", 0, ifelse(species == "Chinstrap", 10, 20)),
    y = max(bill_depth_mm) + 0.1,
    r = cor(bill_length_mm, bill_depth_mm),
    r2 = summary(lm(bill_depth_mm ~ bill_length_mm))$r.squared
  ) %>%
  arrange(species) %>%
  filter(row_number()==1)

ggplot(sifted, aes(bill_length_mm, bill_depth_mm)) +
  geom_point(aes(colour = species), alpha = 0.2) +

  geom_smooth(method="lm",aes(color=species),se=TRUE, fill="grey80") +

  geom_text(data=dfTab,aes(color=species, label=species, x=x, y=24),parse=TRUE, hjust=0, vjust=1, show_guide=FALSE) +
  geom_text(data=dfTab,aes(color=species, label=sprintf("R^2 == %.2f", r2), x=x, y=23.4),parse=TRUE, hjust=0, vjust=1, show_guide=FALSE) +
  geom_text(data=dfTab,aes(color=species, label=sprintf("r == %.2f", r), x=x, y=22.4),parse=TRUE, hjust=0, vjust=1, show_guide=FALSE) +

  # Thèmes
  penguin_colour_scale() +
  theme(legend.position = "none") +

  # Renomer tout
  labs(
    title = "Longueure de la nageoire pour la profondeur\net longuer du bec et l'espèce",
    x = "Longueur du bec (mm)",
    y = "Profondeur du bec (mm)",
    colour = "Espèce",
    size = "Longueure de la\nnageoire (cm)"
  )
```

### Est-ce qu'il y a des tendances temporelles?

En plaçant chacune des variables numériques et des calculées en fonction du temps, telles que dans la @fig-mass-overtime, la @fig-nage-overtime, et la @fig-pop-overtime, il n'y a remarquablement peu de corrélation évidente.

3 années comme étendu temporelle, ayant des séparations discrètes par année, ne me permet pas de tirer des conclusions valides correliant l'année à une autre variable. Il y aura une trop forte incertitude dans tous cas, et l'interpolation ainsi que l'extrapolation ne serviront pas.

```{r fig-mass-overtime, echo=FALSE, fig.cap='TODO: Delete', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  filter(
    !is.na(year) &
    !is.na(body_mass_g)
  ) %>%
  mutate(
    body_mass_g = body_mass_g / 1000,
    flipper_length_mm = flipper_length_mm / 10
  )

dfTab <-
  sifted %>%
  group_by(
    species,
    year
  ) %>%
  select(
    year,
    species,
    bill_length_mm,
    bill_depth_mm,
    flipper_length_mm,
    body_mass_g
  ) %>%
  summarize(
    mean = mean(body_mass_g)
  ) %>%
  distinct(species, year, .keep_all=TRUE)

ggplot(sifted, aes(year, body_mass_g)) +
  geom_line(data=dfTab, aes(x=year, colour = species, y=mean)) +
  geom_point(aes(colour = species), alpha=0.2) +

  # Intervales
  scale_x_continuous(
    breaks = seq(from = 2007, to = 2009, by = 1)
  ) +


  # Thèmes
  theme(
    panel.grid.major.y = element_line(color = "grey90"),
  ) +
  penguin_colour_scale() +

  # Renomer tout
  labs(
    title = "Masse corporelle par espèce, selon le temps",
    x = "Année",
    y = "Masse corporelle (kg)",
    colour = "Espèce"
  )
```

```{r fig-nage-overtime, echo=FALSE, fig.cap='TODO: Delete', out.width='100%', fig.align='center'}

sifted <-
  penguins %>%
  filter(
    !is.na(year) &
    !is.na(flipper_length_mm)
  ) %>%
  mutate(
    body_mass_g = body_mass_g / 1000,
    flipper_length_mm = flipper_length_mm / 10
  )

dfTab <-
  sifted %>%
  group_by(
    species,
    year
  ) %>%
  select(
    year,
    species,
    bill_length_mm,
    bill_depth_mm,
    flipper_length_mm
  ) %>%
  summarize(
    mean = mean(flipper_length_mm)
  ) %>%
  distinct(species, year, .keep_all=TRUE)

ggplot(sifted, aes(year, flipper_length_mm)) +
  geom_line(data=dfTab, aes(x=year, colour = species, y=mean)) +
  geom_point(aes(colour = species), alpha=0.2) +

  # Intervales
  scale_x_continuous(
    breaks = seq(from = 2007, to = 2009, by = 1)
  ) +


  # Thèmes
  theme(
    panel.grid.major.y = element_line(color = "grey90"),
  ) +
  penguin_colour_scale() +

  # Renomer tout
  labs(
    title = "Longueure de la nageoire par espèce, selon le temps",
    x = "Année",
    y = "Longueure de la nageoire (cm)",
    colour = "Espèce"
  )
```

```{r fig-pop-overtime, echo=FALSE, fig.cap='TODO: Delete', out.width='100%', fig.align='center'}

# TODO: Delete

sifted <-
  penguins %>%
  filter(
    !is.na(year) &
    !is.na(body_mass_g)
  )

dfTab <-
  sifted %>%
  group_by(
    species
  ) %>%
  select(
    species,
    bill_length_mm,
    bill_depth_mm,
    flipper_length_mm
  ) %>%
  summarize(
    x = min((penguins %>% filter(!is.na(bill_length_mm)))$bill_length_mm) + ifelse(species == "Adelie", 0, ifelse(species == "Chinstrap", 10, 20)),
    y = max(bill_depth_mm) + 0.1,
    r = cor(bill_length_mm, bill_depth_mm),
    r2 = summary(lm(bill_depth_mm ~ bill_length_mm))$r.squared
  )

ggplot(sifted, aes(year)) +
  geom_line(stat="count", aes(colour = species)) +

  # geom_smooth(data=dfTab,method="lm",aes(color=species, y=sum),se=TRUE, fill="grey80") +

  expand_limits(y=0) +

  # Intervales
  scale_x_continuous(
    breaks = seq(from = 2007, to = 2009, by = 1)
  ) +


  # Thèmes
  theme(
    panel.grid.major.y = element_line(color = "grey90"),
  ) +
  penguin_colour_scale() +

  # Renomer tout
  labs(
    title = "Population par espèce, selon le temps",
    x = "Année",
    y = "Taille de la population",
    colour = "Espèce"
  )
```

{{< pagebreak >}}

## Références

::: {#refs}
:::